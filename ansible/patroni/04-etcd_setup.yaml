---
- hosts: all

- hosts: all
  gather_facts: no
  tasks:
    - name: Create CONFIG folder
      become: true
      file:
        path: "{{ config_dir }}"
        state: directory
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: 0770
        recurse: yes

- hosts: db_server
  gather_facts: no
  tasks:
    - name: Create ETCD data folder
      become: true
      file:
        path: "{{ etcd_data_dir }}"
        state: directory
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: 0770
        recurse: yes

    - name: Create PostgreSQL data folder
      become: true
      file:
        path: "{{ pg_data_dir }}"
        state: directory
        owner: "{{ pg_user }}"
        group: "{{ pg_user }}"
        mode: 0770
        recurse: yes

    - name: Make a copy of the ETCD service file
      become: true
      ansible.builtin.template:
        src: templates/etcd.service.tf
        dest: /etc/systemd/system/etcd.service
        owner: root
        group: root
        mode: "0644"

    - name: Make a copy of the Patroni service file
      become: true
      ansible.builtin.template:
        src: templates/patroni.service.tf
        dest: /etc/systemd/system/patroni.service
        owner: root
        group: root
        mode: "0644"

- hosts: "{{ hostvars[groups['db_server'][0]]['inventory_hostname'] }}"
  gather_facts: no
  vars:
    etcd_register: absent
  tasks:
    - name: Copy the ETCD config file to host {{ inventory_hostname }}
      become: true
      ansible.builtin.template:
        src: templates/etcd_bootstrap.conf.tf
        dest: "{{ config_dir }}/etcd"
        owner: root
        group: root
        mode: "0644"

    - name: Enable and starts the ETCD service on host {{ inventory_hostname }} making sure it's not masked
      become: true
      ansible.builtin.systemd:
        name: etcd
        state: started
        enabled: true
        masked: no

    - name: Register ETCD of the host {{ hostvars[groups['db_server'][1]]['inventory_hostname'] }}
      become: true
      shell: etcdctl member add {{ hostvars[groups['db_server'][1]]['inventory_hostname'] }} http://{{ hostvars[groups['db_server'][1]]['ansible_default_ipv4']['address'] }}:2380
      register: etcd_register

    - name: Make "etcd_register" var persistant
      set_fact:
        etcd_register: "{{ etcd_register }}"

- hosts: "{{ hostvars[groups['db_server'][1]]['inventory_hostname'] }}"
  gather_facts: no
  tasks:
    - name: Make "etcd_register" var persistant
      set_fact:
        etcd_register: "{{ hostvars[groups['db_server'][0]]['etcd_register'].stdout | regex_replace('[\\r\\n\\t]+','\n') }}"
      when: hostvars[groups['db_server'][0]]['etcd_register'] is defined

    - name: Copy the ETCD config file to host {{ inventory_hostname }}
      become: true
      ansible.builtin.template:
        src: templates/etcd_member.conf.tf
        dest: "{{ config_dir }}/etcd"
        owner: root
        group: root
        mode: "0644"
      when: etcd_register is defined

    - name: Enable and starts the ETCD service on host {{ inventory_hostname }} making sure it's not masked
      become: true
      ansible.builtin.systemd:
        name: etcd
        state: started
        enabled: true
        masked: no

- hosts: "{{ hostvars[groups['db_server'][0]]['inventory_hostname'] }}"
  gather_facts: no
  vars:
    etcd_register: absent
  tasks:
    - name: Pause for 10 seconds to allow etcd cluster to fully come up before we add a new member
      pause:
        seconds: 10

    - name: Check etcd cluster health before we add a new member
      become: yes
      command: "etcdctl cluster-health"

    - name: Register ETCD of the host {{ hostvars[groups['db_server'][2]]['inventory_hostname'] }}
      become: true
      shell: etcdctl member add {{ hostvars[groups['db_server'][2]]['inventory_hostname'] }} http://{{ hostvars[groups['db_server'][2]]['ansible_default_ipv4']['address'] }}:2380
      register: etcd_register

    - name: Make "etcd_register" var persistant
      set_fact:
        etcd_register: "{{ etcd_register }}"

- hosts: "{{ hostvars[groups['db_server'][2]]['inventory_hostname'] }}"
  gather_facts: no
  tasks:
    - name: Make "etcd_register" var persistant
      set_fact:
        etcd_register: "{{ hostvars[groups['db_server'][0]]['etcd_register'].stdout | regex_replace('[\\r\\n\\t]+','\n') }}"
      when: hostvars[groups['db_server'][0]]['etcd_register'] is defined

    - name: Make sure ETCD service is stopped
      become: true
      ansible.builtin.systemd:
        name: etcd
        state: stopped
        enabled: false

    - name: Copy the ETCD config file to host {{ inventory_hostname }}
      become: true
      ansible.builtin.template:
        src: templates/etcd_member.conf.tf
        dest: "{{ config_dir }}/etcd"
        owner: root
        group: root
        mode: "0644"
      when: etcd_register is defined

    - name: Enable and starts the ETCD service on host {{ inventory_hostname }} making sure it's not masked
      become: true
      ansible.builtin.systemd:
        name: etcd
        state: started
        enabled: true
        masked: no
